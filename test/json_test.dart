import 'package:flutter_test/flutter_test.dart';
import 'package:hacker_news/src/article.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main(){
  test("parse topstories.json", (){
    const jsonString = "[ 27614381, 27606099, 27613217, 27605052, 27606347, 27579759, 27606008, 27611433, 27612728, 27613536, 27606657, 27612835, 27588350, 27599470, 27612624, 27609027, 27589948, 27606604, 27609919, 27583185, 27614124, 27605835, 27610181, 27605656, 27610409, 27613255, 27607335, 27607161, 27606860, 27593828, 27606929, 27612404, 27589503, 27613660, 27589559, 27606094, 27606348, 27594742, 27608387, 27593772, 27604749, 27614292, 27610300, 27607099, 27603747, 27613464, 27606066, 27602383, 27605712, 27588306, 27603039, 27588300, 27614149, 27593360, 27602395, 27612448, 27602077, 27607446, 27611704, 27607520, 27607831, 27613517, 27588842, 27602808, 27613589, 27603912, 27611743, 27606039, 27602629, 27604809, 27602655, 27612740, 27604543, 27611189, 27599734, 27604798, 27598424, 27604673, 27588047, 27607379, 27605100, 27588258, 27595309, 27613040, 27605248, 27605215, 27603069, 27593406, 27599615, 27592187, 27609188, 27602520, 27589448, 27588887, 27614457, 27594985, 27612645, 27601807, 27606153, 27595429, 27587361, 27612102, 27597987, 27602699, 27602519, 27590508, 27595770, 27598292, 27604985, 27607914, 27593073, 27603849, 27603257, 27603228, 27588673, 27606830, 27596719, 27588671, 27587520, 27610912, 27611970, 27600653, 27610108, 27596390, 27599858, 27608639, 27603625, 27592822, 27597662, 27605815, 27603584, 27589916, 27599253, 27603368, 27600631, 27596115, 27595902, 27606590, 27603212, 27588195, 27588199, 27603471, 27598383, 27586978, 27585956, 27601561, 27604580, 27589913, 27581257, 27590583, 27603235, 27592473, 27585711, 27588747, 27587442, 27593081, 27589298, 27606471, 27603613, 27612236, 27609175, 27609748, 27596125, 27592081, 27606679, 27580744, 27606591, 27610211, 27594452, 27598222, 27603672, 27590697, 27604857, 27597660, 27607523, 27579701, 27593462, 27593021, 27603968, 27599684, 27585856, 27594291, 27587316, 27591218, 27589717, 27579693, 27612507, 27594133, 27589080, 27585953, 27604652, 27591079, 27591657, 27605137, 27613878, 27587109, 27589040, 27605520, 27601998, 27606770, 27587529, 27581762, 27586360, 27609729, 27594733, 27601497, 27586160, 27597003, 27606057, 27600533, 27583583, 27586081, 27610831, 27581108, 27604546, 27595043, 27585520, 27581336, 27592876, 27609056, 27582396, 27581359, 27592369, 27608887, 27593136, 27605272, 27585817, 27608506, 27586970, 27600774, 27600169, 27605879, 27596521, 27589490, 27592285, 27602397, 27591737, 27586146, 27595879, 27585051, 27584518, 27582645, 27608964, 27600411, 27604998, 27607319, 27594897, 27612229, 27598551, 27593537, 27581797, 27612894, 27600526, 27586843, 27588819, 27592971, 27600356, 27589704, 27592696, 27589155, 27600546, 27591828, 27589549, 27587429, 27585208, 27589873, 27597327, 27591690, 27596620, 27593533, 27596330, 27595385, 27596064, 27598300, 27608838, 27595408, 27585464, 27591840, 27605098, 27599513, 27595202, 27604772, 27605882, 27579702, 27589138, 27591037, 27590513, 27603336, 27600637, 27593020, 27611707, 27600100, 27592231, 27594085, 27612587, 27585535, 27606329, 27597476, 27593007, 27591076, 27582568, 27583977, 27610435, 27601934, 27584974, 27597667, 27595946, 27586237, 27586671, 27585293, 27598729, 27585989, 27591357, 27580558, 27604136, 27601311, 27589010, 27585056, 27588812, 27588027, 27588738, 27589548, 27583636, 27602422, 27580742, 27582029, 27599115, 27586816, 27590355, 27587793, 27599085, 27598020, 27601765, 27579652, 27590284, 27587283, 27585256, 27601520, 27591517, 27599473, 27585670, 27593453, 27601134, 27604477, 27596076, 27596070, 27580277, 27591607, 27603733, 27592257, 27609065, 27588669, 27603758, 27594378, 27597267, 27580153, 27592961, 27584868, 27586798, 27596338, 27585666, 27589680, 27591586, 27591240, 27597008, 27589230, 27608898, 27579488, 27603432, 27598341, 27579842, 27586831, 27581631, 27598155, 27592354, 27598040, 27600828, 27597799, 27580645, 27582590, 27580008, 27587633, 27597689, 27581343, 27591348, 27603031, 27586494, 27591232, 27603610, 27590858, 27588621, 27587911, 27590756, 27600173, 27588339, 27605482, 27595566, 27594376, 27587255, 27583629, 27589370, 27586644, 27587188, 27592194, 27592152, 27591941, 27588454, 27591145, 27599774, 27590509, 27590696, 27603328, 27584522, 27586931, 27589779, 27605170, 27586392, 27586282, 27586167, 27586158, 27580407, 27579477, 27579464, 27579417, 27581308, 27581089, 27580840, 27584778, 27580777, 27588840, 27588729, 27583107, 27581532, 27579903, 27586512, 27580605, 27589476, 27590552, 27588023, 27587938, 27581639, 27593671, 27590365, 27586794, 27584354, 27589581, 27586819, 27583959, 27585151, 27596687, 27606213, 27584008, 27596732, 27595996, 27583263, 27588612, 27580941, 27594718, 27580824, 27585207, 27581168, 27584880, 27584618, 27589632, 27586973, 27584373, 27588626, 27590490, 27589971, 27599243, 27589354, 27587969, 27583417, 27587772, 27581242, 27580014, 27579431, 27584042, 27591888, 27581105, 27581642, 27584082, 27586253, 27597986, 27586432, 27587446, 27585303, 27587144, 27580946, 27593237, 27614048, 27582364, 27580365, 27585165, 27587864, 27591773, 27606393, 27606728, 27604504 ]";
    expect(parseTopStories(jsonString).first, 27614381);
  });

  test("parse item.json", (){
    const jsonString = """{"by":"dhouston","descendants":71,"id":8863,"kids":[9224,8917,8952,8958,8884,8887,8869,8940,8908,9005,8873,9671,9067,9055,8865,8881,8872,8955,10403,8903,8928,9125,8998,8901,8902,8907,8894,8870,8878,8980,8934,8943,8876],"score":104,"time":1175714200,"title":"My YC app: Dropbox - Throw away your USB drive","type":"story","url":"http://www.getdropbox.com/u/2/screencast.html"}""";
    expect(parseArticle(jsonString).by, "dhouston");
  });
  test("parse item.json over network", () async{
    final url='https://hacker-news.firebaseio.com/v0/beststories.json';
    final response = await http.get(url);
    if(response.statusCode==200){
      final idListJson = json.decode(response.body);
      if(idListJson.isNotEmpty){
        final storyUrl = 'https://hacker-news.firebaseio.com/v0/item/${idListJson.first}.json';
        final storyRes = await http.get(storyUrl);
        if(storyRes.statusCode==200){
          expect(parseArticle(storyRes.body), isNotNull);
        }
      }
    }
  },skip: true);
}